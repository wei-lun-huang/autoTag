name: Auto Tag When PR To Master

# on:
#   # push:
#   #   branches:
#   #     - master
#   # pull_request:
#   #   branches:
#   #     - master
#   pull_request_target:
#     types:
#       - closed
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - develop
      - release
      - master
    types: [opened, synchronize, closed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  preJob:
    name: preJob
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: echo
        run: echo "${{ github.event.pull_request.base.ref}}"
  # tag:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # - name: Checkout code
  #     #   uses: actions/checkout@v2
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: Set Git Config
  #       run: |
  #         git config --global user.email "weilun.huang@gogolook.com"
  #         git config --global user.name "wei-lun-huang"
  #     - name: Create Git Tag
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'
  #       run: |
  #         pr_title="${{ github.event.pull_request.title }}"
  #         pr_body=$(echo "${{ github.event.pull_request.body }}" | grep -oP 'RC-\d+')
  #         git tag -a "$pr_title" -m "$pr_body"
  #         git push origin --tags
  tag:
    name: autoTag
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set Git Config
        run: |
          git config --global user.email "weilun.huang@gogolook.com"
          git config --global user.name "wei-lun-huang"
      - name: Create Git Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_title="${{ github.event.pull_request.title }}"
          pr_body=$(echo "${{ github.event.pull_request.body }}" | grep -oP 'RC-\d+')
          git tag -a "$pr_title" -m "$pr_body"
          git push origin --tags

